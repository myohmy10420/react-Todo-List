{"version":3,"sources":["Component/TodoApp.js"],"names":["TodoApp","props","context","state","items","text","_handleClick","bind","_handleChange","e","setState","target","value","preventDefault","newItem","id","Date","now","prevState","concat","createElement","onChange","onClick","length","defaultProps"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;;;;;;;IAEaA,O,WAAAA,O;;;AACX,mBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,kHACpBD,KADoB,EACbC,OADa;;AAG1B,UAAKC,KAAL,GAAa;AACXC,aAAO,EADI;AAEXC,YAAM;AAFK,KAAb;;AAKA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,OAArB;AAT0B;AAU3B;;;;2CAEuB,CACvB;;;wCAEoB,CACpB;;;kCAEaE,C,EAAG;AACf,WAAKC,QAAL,CAAc;AACZL,cAAMI,EAAEE,MAAF,CAASC;AADH,OAAd;AAGD;;;iCAEYH,C,EAAG;AACdA,QAAEI,cAAF;AACA,UAAIC,UAAU;AACZT,cAAM,KAAKF,KAAL,CAAWE,IADL;AAEZU,YAAIC,KAAKC,GAAL;AAFQ,OAAd;AAIA,WAAKP,QAAL,CAAc,UAACQ,SAAD;AAAA,eAAgB;AAC5Bd,iBAAOc,UAAUd,KAAV,CAAgBe,MAAhB,CAAuBL,OAAvB,CADqB;AAE5BT,gBAAM;AAFsB,SAAhB;AAAA,OAAd;AAID;;;6BAIQ;AACP,aACE,gBAAMe,aAAN,CAAoB,KAApB,EAA2B,IAA3B,EACE,gBAAMA,aAAN,qBAA8B,EAAChB,OAAO,KAAKD,KAAL,CAAWC,KAAnB,EAA9B,CADF,EAEE,gBAAMgB,aAAN,CAAoB,OAApB,EAA6B,EAACC,UAAU,KAAKb,aAAhB,EAA+BI,OAAO,KAAKT,KAAL,CAAWE,IAAjD,EAA7B,CAFF,EAGE,gBAAMe,aAAN,CAAoB,QAApB,EAA8B,EAACE,SAAS,KAAKhB,YAAf,EAA9B,EAA4D,WAAW,KAAKH,KAAL,CAAWC,KAAX,CAAiBmB,MAAjB,GAA0B,CAArC,CAA5D,CAHF,CADF;AAOD;;;;;;AAGHvB,QAAQwB,YAAR,GAAuB,EAAvB","file":"Component/TodoApp.js","sourcesContent":["import React, { Component } from 'react';\nimport { TodoList } from './TodoList';\n\nexport class TodoApp extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      items: [],\n      text: ''\n    };\n\n    this._handleClick = this._handleClick.bind(this);\n    this._handleChange = this._handleChange.bind(this);\n  }\n\n  componentWillUnmount () {\n  }\n\n  componentDidMount () {\n  }\n\n  _handleChange(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  _handleClick(e) {\n    e.preventDefault();\n    var newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    this.setState((prevState) => ({\n      items: prevState.items.concat(newItem),\n      text: ''\n    }));\n  }\n  \n\n\n  render() {\n    return (\n      React.createElement(\"div\", null, \n        React.createElement(TodoList, {items: this.state.items}), \n        React.createElement(\"input\", {onChange: this._handleChange, value: this.state.text}), \n        React.createElement(\"button\", {onClick: this._handleClick}, 'Add #' + (this.state.items.length + 1))\n      )\n    );\n  }\n}\n\nTodoApp.defaultProps = {\n}\n"],"sourceRoot":"/source/"}